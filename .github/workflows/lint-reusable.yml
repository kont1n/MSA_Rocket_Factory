name: Lint Reusable

on:
  workflow_call:
    inputs:
      modules:
        required: true
        type: string
      go-version:
        required: true
        type: string
      golangci-lint-version:
        required: true
        type: string

jobs:
  golangci-lint:
    name: Lint all Go modules
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: üì¶ Checkout code
        uses: actions/checkout@v4.2.2

      - name: üóÑÔ∏è Cache Go modules
        uses: actions/cache@v4.2.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum', 'go.work.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: üõ† Set up Go
        uses: actions/setup-go@v5.4.0
        with:
          go-version: ${{ inputs.go-version }}

      - name: üêæ Show go.work (debug)
        run: cat go.work || echo "‚ùó go.work not found"

      - name: üîÑ Install dependencies
        run: |
          # –ò—Å–ø–æ–ª—å–∑—É–µ–º go work –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
          go work sync

      - name: üìå Install Task
        uses: arduino/setup-task@v2.0.0

      - name: ‚úÖ Run golangci-lint via Taskfile
        env:
          MODULES: ${{ inputs.modules }}
          GOLANGCI_LINT_VERSION: ${{ inputs.golangci-lint-version }}
        run: task lint

      - name: üè∑Ô∏è Generate lint status badge
        if: github.ref == 'refs/heads/main'
        run: |
          # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SVG –±–µ–π–¥–∂ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –ª–∏–Ω—Ç–∞
          if [ "${{ job.status }}" = "success" ]; then
            color="brightgreen"
            message="passing"
          else
            color="red"
            message="failing"
          fi
          
          # –°–æ–∑–¥–∞–µ–º SVG –±–µ–π–¥–∂
          cat > lint-badge.svg << EOF
          <svg xmlns="http://www.w3.org/2000/svg" width="99" height="20">
            <linearGradient id="b" x2="0" y2="100%">
              <stop offset="0" stop-color="#bbb" stop-opacity=".1"/>
              <stop offset="1" stop-opacity=".1"/>
            </linearGradient>
            <mask id="a">
              <rect width="99" height="20" rx="3" fill="#fff"/>
            </mask>
            <g mask="url(#a)">
              <path fill="#555" d="M0 0h61v20H0z"/>
              <path fill="#$color" d="M61 0h38v20H61z"/>
              <path fill="url(#b)" d="M0 0h99v20H0z"/>
            </g>
            <g fill="#fff" text-anchor="middle" font-family="DejaVu Sans,Verdana,Geneva,sans-serif" font-size="11">
              <text x="30.5" y="15" fill="#010101" fill-opacity=".3">Lint</text>
              <text x="30.5" y="14">Lint</text>
              <text x="80" y="15" fill="#010101" fill-opacity=".3">$message</text>
              <text x="80" y="14">$message</text>
            </g>
          </svg>
          EOF

      - name: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–µ–π–¥–∂–∞ –ª–∏–Ω—Ç–∞
        if: github.ref == 'refs/heads/main'
        uses: tj-actions/verify-changed-files@v12
        id: verify-lint-badge-changed
        with:
          files: lint-badge.svg

      - name: –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –±–µ–π–¥–∂–∞ –ª–∏–Ω—Ç–∞
        if: github.ref == 'refs/heads/main' && steps.verify-lint-badge-changed.outputs.files_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add lint-badge.svg
          git commit -m "chore: update lint status badge"

      - name: –ü—É—à –∏–∑–º–µ–Ω–µ–Ω–∏–π –±–µ–π–¥–∂–∞ –ª–∏–Ω—Ç–∞
        if: github.ref == 'refs/heads/main' && steps.verify-lint-badge-changed.outputs.files_changed == 'true'
        run: |
          git remote set-url origin https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}.git
          git push origin HEAD:${{ github.ref_name }}