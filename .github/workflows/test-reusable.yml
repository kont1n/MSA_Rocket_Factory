name: Run Unit Tests

on:
  workflow_call:
    inputs:
      modules:
        required: true
        type: string
      go-version:
        required: true
        type: string

jobs:
  test:
    name: Run go test
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: üì¶ Checkout code
        uses: actions/checkout@v4.2.2

      - name: üóÑÔ∏è Cache Go modules
        uses: actions/cache@v4.2.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum', 'go.work.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: üõ† Set up Go
        uses: actions/setup-go@v5.4.0
        with:
          go-version: ${{ inputs.go-version }}

      - name: üîÑ Install dependencies
        run: |
          # –ò—Å–ø–æ–ª—å–∑—É–µ–º go work –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
          go work sync

      - name: üìå Install Task
        uses: arduino/setup-task@v2.0.0

      - name: üß™ Run unit tests via Taskfile
        id: test_step
        continue-on-error: true
        env:
          MODULES: ${{ inputs.modules }}
        run: |
          # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
          mkdir -p .github_pages/tests
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          echo "üß™ –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤..."
          if task test > test_output.txt 2>&1; then
            echo "‚úÖ –¢–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ"
            echo "TEST_STATUS=success" >> $GITHUB_OUTPUT
            test_result="success"
          else
            echo "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Ç–µ—Å—Ç–∞—Ö"
            echo "TEST_STATUS=failure" >> $GITHUB_OUTPUT
            test_result="failure"
          fi
          
          # –°–æ–∑–¥–∞–µ–º HTML –æ—Ç—á–µ—Ç
          cat > .github_pages/tests/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="ru">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>üß™ Test Report</title>
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif;
                      line-height: 1.6;
                      color: #24292f;
                      max-width: 1200px;
                      margin: 0 auto;
                      padding: 20px;
                      background: #ffffff;
                  }
                  .header {
                      text-align: center;
                      padding: 20px 0;
                      border-bottom: 2px solid #e1e4e8;
                      margin-bottom: 30px;
                  }
                  .status-success {
                      background: #dcfce7;
                      color: #15803d;
                      padding: 12px 20px;
                      border-radius: 8px;
                      border: 1px solid #bbf7d0;
                  }
                  .status-failure {
                      background: #fef2f2;
                      color: #dc2626;
                      padding: 12px 20px;
                      border-radius: 8px;
                      border: 1px solid #fecaca;
                  }
                  .report-content {
                      background: #f6f8fa;
                      padding: 20px;
                      border-radius: 8px;
                      border: 1px solid #d1d9e0;
                      font-family: 'SF Mono', Consolas, monospace;
                      white-space: pre-wrap;
                      font-size: 14px;
                      overflow-x: auto;
                  }
                  .info {
                      background: #f0f9ff;
                      color: #0369a1;
                      padding: 12px 20px;
                      border-radius: 8px;
                      border: 1px solid #bae6fd;
                      margin: 20px 0;
                  }
                  .navigation {
                      text-align: center;
                      margin: 30px 0;
                  }
                  .nav-link {
                      display: inline-block;
                      margin: 0 10px;
                      padding: 8px 16px;
                      background: #f6f8fa;
                      color: #24292f;
                      text-decoration: none;
                      border-radius: 6px;
                      border: 1px solid #d1d9e0;
                  }
                  .nav-link:hover {
                      background: #e1e4e8;
                  }
                  .test-summary {
                      background: #f8fafc;
                      padding: 15px;
                      border-radius: 8px;
                      border: 1px solid #e2e8f0;
                      margin: 20px 0;
                  }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>üß™ Test Report</h1>
          EOF
          
          # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ HTML
          if [ "$test_result" = "success" ]; then
              echo '        <div class="status-success">‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ</div>' >> .github_pages/tests/index.html
          else
              echo '        <div class="status-failure">‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Ç–µ—Å—Ç–∞—Ö</div>' >> .github_pages/tests/index.html
          fi
          
          # –ó–∞–≤–µ—Ä—à–∞–µ–º header –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
          cat >> .github_pages/tests/index.html << 'EOF'
              </div>
              
              <div class="navigation">
                  <a href="../" class="nav-link">üìä Coverage Report</a>
                  <a href="./" class="nav-link">üß™ Test Report</a>
                  <a href="../lint/" class="nav-link">üîç Lint Report</a>
              </div>
              
              <div class="info">
                  <strong>–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:</strong> 
          EOF
          
          echo "$(date)" >> .github_pages/tests/index.html
          echo '<br><strong>Commit:</strong> ${{ github.sha }}' >> .github_pages/tests/index.html
          echo '<br><strong>Branch:</strong> ${{ github.ref_name }}' >> .github_pages/tests/index.html
          
          # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫—Ä–∞—Ç–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ—Å—Ç–æ–≤ –∏–∑ –≤—ã–≤–æ–¥–∞
          test_summary=""
          if [ -f test_output.txt ]; then
            # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ç–µ—Å—Ç–æ–≤
            passed_count=$(grep -o "PASS.*" test_output.txt | wc -l | tr -d ' ')
            failed_count=$(grep -o "FAIL.*" test_output.txt | wc -l | tr -d ' ')
            
            if [ "$passed_count" -gt 0 ] || [ "$failed_count" -gt 0 ]; then
              test_summary="<br><strong>–ü—Ä–æ–π–¥–µ–Ω–æ:</strong> $passed_count <strong>–ü—Ä–æ–≤–∞–ª–µ–Ω–æ:</strong> $failed_count"
            fi
          fi
          
          cat >> .github_pages/tests/index.html << EOF
              $test_summary
              </div>
              
              <h2>üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h2>
              <div class="report-content">
          EOF
          
          # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–æ–≤ –≤ HTML, —ç–∫—Ä–∞–Ω–∏—Ä—É—è HTML —Å–∏–º–≤–æ–ª—ã
          if [ -f test_output.txt ]; then
              sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g' test_output.txt >> .github_pages/tests/index.html
          else
              echo "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã" >> .github_pages/tests/index.html
          fi
          
          cat >> .github_pages/tests/index.html << 'EOF'
              </div>
          </body>
          </html>
          EOF
          
          echo "üìä HTML –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: .github_pages/tests/index.html"

      - name: üì§ Upload test report artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: |
            .github_pages/tests/
            test_output.txt
          retention-days: 30

      - name: üìã Show test summary
        run: |
          echo "üß™ Test Summary:"
          echo "Status: ${{ steps.test_step.outputs.TEST_STATUS }}"
          if [ -f test_output.txt ]; then
            echo "üìÑ Output preview (last 15 lines):"
            tail -15 test_output.txt
          fi