name: Combined Reports

on:
  workflow_call:
    inputs:
      modules:
        required: true
        type: string
      go-version:
        required: true
        type: string
      golangci-lint-version:
        required: true
        type: string

jobs:
  combined-reports:
    name: Generate combined reports
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: üì¶ Checkout code
        uses: actions/checkout@v4.2.2

      - name: üõ†Ô∏è Set up Go
        uses: actions/setup-go@v5.4.0
        with:
          go-version: ${{ inputs.go-version }}

      - name: üóÑÔ∏è Cache Go modules
        uses: actions/cache@v4.2.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-v1-go-${{ hashFiles('**/go.sum', 'go.work.sum') }}
          restore-keys: |
            ${{ runner.os }}-v1-go-

      - name: üîÑ Install dependencies
        run: |
          go work sync
          find . -name "go.mod" -type f | while read -r modfile; do
            dir=$(dirname "$modfile")
            echo "Processing module in: $dir"
            cd "$dir"
            go mod tidy
            cd - > /dev/null
          done

      - name: üìå Install Task
        uses: arduino/setup-task@v2.0.0

      - name: üìå Install gocov-html
        run: |
          go install github.com/axw/gocov/gocov@v1
          go install github.com/matm/gocov-html/cmd/gocov-html@v1

      - name: üîç Run Lint
        id: lint_step
        env:
          MODULES: ${{ inputs.modules }}
          GOLANGCI_LINT_VERSION: ${{ inputs.golangci-lint-version }}
        run: |
          echo "üîç –ó–∞–ø—É—Å–∫ golangci-lint..."
          mkdir -p .github_pages/lint
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º –ª–∏–Ω—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          set +e  # –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ
          task lint > lint_output.txt 2>&1
          lint_exit_code=$?
          set -e  # –í–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
          
          if [ $lint_exit_code -eq 0 ]; then
            echo "‚úÖ –õ–∏–Ω—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ"
            echo "LINT_STATUS=success" >> $GITHUB_OUTPUT
            lint_result="success"
          else
            echo "‚ùå –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –ª–∏–Ω—Ç–∏–Ω–≥–∞"
            echo "LINT_STATUS=failure" >> $GITHUB_OUTPUT 
            lint_result="failure"
          fi
          
          # –°–æ–∑–¥–∞–µ–º HTML –æ—Ç—á–µ—Ç –ª–∏–Ω—Ç–∏–Ω–≥–∞
          cat > .github_pages/lint/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="ru">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>üîç Lint Report</title>
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif;
                      line-height: 1.6;
                      color: #24292f;
                      max-width: 1200px;
                      margin: 0 auto;
                      padding: 20px;
                      background: #ffffff;
                  }
                  .header {
                      text-align: center;
                      padding: 20px 0;
                      border-bottom: 2px solid #e1e4e8;
                      margin-bottom: 30px;
                  }
                  .status-success {
                      background: #dcfce7;
                      color: #15803d;
                      padding: 12px 20px;
                      border-radius: 8px;
                      border: 1px solid #bbf7d0;
                  }
                  .status-failure {
                      background: #fef2f2;
                      color: #dc2626;
                      padding: 12px 20px;
                      border-radius: 8px;
                      border: 1px solid #fecaca;
                  }
                  .report-content {
                      background: #f6f8fa;
                      padding: 20px;
                      border-radius: 8px;
                      border: 1px solid #d1d9e0;
                      font-family: 'SF Mono', Consolas, monospace;
                      white-space: pre-wrap;
                      font-size: 14px;
                      overflow-x: auto;
                  }
                  .info {
                      background: #f0f9ff;
                      color: #0369a1;
                      padding: 12px 20px;
                      border-radius: 8px;
                      border: 1px solid #bae6fd;
                      margin: 20px 0;
                  }
                  .navigation {
                      text-align: center;
                      margin: 30px 0;
                  }
                  .nav-link {
                      display: inline-block;
                      margin: 0 10px;
                      padding: 8px 16px;
                      background: #f6f8fa;
                      color: #24292f;
                      text-decoration: none;
                      border-radius: 6px;
                      border: 1px solid #d1d9e0;
                  }
                  .nav-link:hover {
                      background: #e1e4e8;
                  }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>üîç Lint Report</h1>
          EOF
          
          if [ "$lint_result" = "success" ]; then
              echo '        <div class="status-success">‚úÖ –õ–∏–Ω—Ç–∏–Ω–≥ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ - –æ—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>' >> .github_pages/lint/index.html
          else
              echo '        <div class="status-failure">‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –ª–∏–Ω—Ç–∏–Ω–≥–∞</div>' >> .github_pages/lint/index.html
          fi
          
          cat >> .github_pages/lint/index.html << 'EOF'
              </div>
              
              <div class="navigation">
                  <a href="../" class="nav-link">üìä Coverage Report</a>
                  <a href="../tests/" class="nav-link">üß™ Test Report</a>
                  <a href="./" class="nav-link">üîç Lint Report</a>
                  <a href="../reports.html" class="nav-link">üìã All Reports</a>
              </div>
              
              <div class="info">
                  <strong>–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:</strong> 
          EOF
          
          echo "$(date)" >> .github_pages/lint/index.html
          echo '<br><strong>Commit:</strong> ${{ github.sha }}' >> .github_pages/lint/index.html
          echo '<br><strong>Branch:</strong> ${{ github.ref_name }}' >> .github_pages/lint/index.html
          
          cat >> .github_pages/lint/index.html << 'EOF'
              </div>
              
              <h2>üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ª–∏–Ω—Ç–∏–Ω–≥–∞:</h2>
              <div class="report-content">
          EOF
          
          if [ -f lint_output.txt ]; then
              sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g' lint_output.txt >> .github_pages/lint/index.html
          else
              echo "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ª–∏–Ω—Ç–∏–Ω–≥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã" >> .github_pages/lint/index.html
          fi
          
          cat >> .github_pages/lint/index.html << 'EOF'
              </div>
          </body>
          </html>
          EOF

      - name: üß™ Run Tests
        id: test_step
        env:
          MODULES: ${{ inputs.modules }}
        run: |
          echo "üß™ –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤..."
          mkdir -p .github_pages/tests
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          set +e  # –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ
          task test > test_output.txt 2>&1
          test_exit_code=$?
          set -e  # –í–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
          
          if [ $test_exit_code -eq 0 ]; then
            echo "‚úÖ –¢–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ"
            echo "TEST_STATUS=success" >> $GITHUB_OUTPUT
            test_result="success"
          else
            echo "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Ç–µ—Å—Ç–∞—Ö"
            echo "TEST_STATUS=failure" >> $GITHUB_OUTPUT
            test_result="failure"
          fi
          
          # –°–æ–∑–¥–∞–µ–º HTML –æ—Ç—á–µ—Ç —Ç–µ—Å—Ç–æ–≤
          cat > .github_pages/tests/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="ru">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>üß™ Test Report</title>
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif;
                      line-height: 1.6;
                      color: #24292f;
                      max-width: 1200px;
                      margin: 0 auto;
                      padding: 20px;
                      background: #ffffff;
                  }
                  .header {
                      text-align: center;
                      padding: 20px 0;
                      border-bottom: 2px solid #e1e4e8;
                      margin-bottom: 30px;
                  }
                  .status-success {
                      background: #dcfce7;
                      color: #15803d;
                      padding: 12px 20px;
                      border-radius: 8px;
                      border: 1px solid #bbf7d0;
                  }
                  .status-failure {
                      background: #fef2f2;
                      color: #dc2626;
                      padding: 12px 20px;
                      border-radius: 8px;
                      border: 1px solid #fecaca;
                  }
                  .report-content {
                      background: #f6f8fa;
                      padding: 20px;
                      border-radius: 8px;
                      border: 1px solid #d1d9e0;
                      font-family: 'SF Mono', Consolas, monospace;
                      white-space: pre-wrap;
                      font-size: 14px;
                      overflow-x: auto;
                  }
                  .info {
                      background: #f0f9ff;
                      color: #0369a1;
                      padding: 12px 20px;
                      border-radius: 8px;
                      border: 1px solid #bae6fd;
                      margin: 20px 0;
                  }
                  .navigation {
                      text-align: center;
                      margin: 30px 0;
                  }
                  .nav-link {
                      display: inline-block;
                      margin: 0 10px;
                      padding: 8px 16px;
                      background: #f6f8fa;
                      color: #24292f;
                      text-decoration: none;
                      border-radius: 6px;
                      border: 1px solid #d1d9e0;
                  }
                  .nav-link:hover {
                      background: #e1e4e8;
                  }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>üß™ Test Report</h1>
          EOF
          
          if [ "$test_result" = "success" ]; then
              echo '        <div class="status-success">‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ</div>' >> .github_pages/tests/index.html
          else
              echo '        <div class="status-failure">‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Ç–µ—Å—Ç–∞—Ö</div>' >> .github_pages/tests/index.html
          fi
          
          cat >> .github_pages/tests/index.html << 'EOF'
              </div>
              
              <div class="navigation">
                  <a href="../" class="nav-link">üìä Coverage Report</a>
                  <a href="./" class="nav-link">üß™ Test Report</a>
                  <a href="../lint/" class="nav-link">üîç Lint Report</a>
                  <a href="../reports.html" class="nav-link">üìã All Reports</a>
              </div>
              
              <div class="info">
                  <strong>–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:</strong> 
          EOF
          
          echo "$(date)" >> .github_pages/tests/index.html
          echo '<br><strong>Commit:</strong> ${{ github.sha }}' >> .github_pages/tests/index.html
          echo '<br><strong>Branch:</strong> ${{ github.ref_name }}' >> .github_pages/tests/index.html
          
          # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫—Ä–∞—Ç–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ—Å—Ç–æ–≤ –∏–∑ –≤—ã–≤–æ–¥–∞
          test_summary=""
          if [ -f test_output.txt ]; then
            passed_count=$(grep -o "PASS.*" test_output.txt | wc -l | tr -d ' ')
            failed_count=$(grep -o "FAIL.*" test_output.txt | wc -l | tr -d ' ')
            
            if [ "$passed_count" -gt 0 ] || [ "$failed_count" -gt 0 ]; then
              test_summary="<br><strong>–ü—Ä–æ–π–¥–µ–Ω–æ:</strong> $passed_count <strong>–ü—Ä–æ–≤–∞–ª–µ–Ω–æ:</strong> $failed_count"
            fi
          fi
          
          cat >> .github_pages/tests/index.html << EOF
              $test_summary
              </div>
              
              <h2>üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h2>
              <div class="report-content">
          EOF
          
          if [ -f test_output.txt ]; then
              sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g' test_output.txt >> .github_pages/tests/index.html
          else
              echo "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã" >> .github_pages/tests/index.html
          fi
          
          cat >> .github_pages/tests/index.html << 'EOF'
              </div>
          </body>
          </html>
          EOF

      - name: üìä Run Coverage
        run: |
          echo "üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ–∫—Ä—ã—Ç–∏—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏..."
          mkdir -p .github_pages
          echo "mode: atomic" > coverage.out
          
          # –ù–∞–π–¥–µ–º –≤—Å–µ –º–æ–¥—É–ª–∏ –∏ —Å–æ–±–µ—Ä–µ–º –ø–æ–∫—Ä—ã—Ç–∏–µ –∫–∞–∫ –≤ test-coverage
          modules_with_tests=()
          coverage_files=()
          echo "üîç –ü–æ–∏—Å–∫ –º–æ–¥—É–ª–µ–π —Å internal –ø–∞–∫–µ—Ç–∞–º–∏..."
          
          for mod in ${{ inputs.modules }}; do
            if [ -d "$mod" ] && [ -f "$mod/go.mod" ]; then
              echo "üì¶ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–æ–¥—É–ª—å $mod"
              cd "$mod"
              
              # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ internal –ø–∞–∫–µ—Ç–æ–≤
              if ! go list ./internal/... 2>/dev/null | grep -q .; then
                echo "‚ö†Ô∏è –í –º–æ–¥—É–ª–µ $mod –Ω–µ—Ç –ø–∞–∫–µ—Ç–æ–≤ internal"
                cd ..
                continue
              fi
              
              # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è –ø–æ–∫—Ä—ã—Ç–∏—è (–∏—Å–∫–ª—é—á–∞–µ–º mocks –∏ test)
              TARGET_PACKAGES=$(go list ./internal/... 2>/dev/null | grep -v "/mocks" | grep -v "/test" | tr '\n' ',')
              
              if [ -n "$TARGET_PACKAGES" ]; then
                echo "üì¶ –ü–∞–∫–µ—Ç—ã –¥–ª—è –ø–æ–∫—Ä—ã—Ç–∏—è –≤ $mod: $TARGET_PACKAGES"
                modules_with_tests+=("$mod")
                
                # –£–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø—è—Ç—É—é –∏–∑ TARGET_PACKAGES
                TARGET_PACKAGES=${TARGET_PACKAGES%,}
                
                # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –¥–ª—è –º–æ–¥—É–ª—è
                COVERAGE_FILE="coverage_${mod}.out"
                
                echo "üîç –ó–∞–ø—É—Å–∫–∞–µ–º: go test -v -coverprofile=$COVERAGE_FILE -coverpkg=$TARGET_PACKAGES ./internal/..."
                
                # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –Ω–∞ internal –ø–∞–∫–µ—Ç—ã
                if go test -v -coverprofile="$COVERAGE_FILE" -coverpkg="$TARGET_PACKAGES" ./internal/... 2>/dev/null; then
                  if [ -f "$COVERAGE_FILE" ] && [ -s "$COVERAGE_FILE" ]; then
                    coverage_files+=("$COVERAGE_FILE")
                    echo "‚úÖ –ü–æ–∫—Ä—ã—Ç–∏–µ –¥–ª—è $mod —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ $COVERAGE_FILE"
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–∫—Ä—ã—Ç–∏–µ –¥–ª—è –º–æ–¥—É–ª—è
                    go tool cover -func="$COVERAGE_FILE" | tail -1
                  else
                    echo "‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–∫—Ä—ã—Ç–∏—è –≤ –º–æ–¥—É–ª–µ $mod"
                    [ -f "$COVERAGE_FILE" ] && rm -f "$COVERAGE_FILE"
                  fi
                else
                  echo "‚ùå –¢–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å –≤ –º–æ–¥—É–ª–µ $mod, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
                  [ -f "$COVERAGE_FILE" ] && rm -f "$COVERAGE_FILE"
                fi
              else
                echo "‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ $mod"
              fi
              
              cd ..
            else
              echo "‚ö†Ô∏è –ú–æ–¥—É–ª—å $mod –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç go.mod"
            fi
          done
          
          echo "üìà –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –º–æ–¥—É–ª–µ–π —Å —Ç–µ—Å—Ç–∞–º–∏: ${#modules_with_tests[@]}"
          echo "üìã –ú–æ–¥—É–ª–∏: ${modules_with_tests[*]}"
          echo "üìÅ –§–∞–π–ª—ã –ø–æ–∫—Ä—ã—Ç–∏—è: ${coverage_files[*]}"
          
          # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –ø–æ–∫—Ä—ã—Ç–∏—è
          if [ ${#coverage_files[@]} -gt 0 ]; then
            echo "üîó –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ñ–∞–π–ª—ã –ø–æ–∫—Ä—ã—Ç–∏—è..."
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
            TEMP_COVERAGE=$(mktemp)
            
            for file in "${coverage_files[@]}"; do
              echo "üîó –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª: $file"
              if [ -f "$file" ] && [ -s "$file" ]; then
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É (mode: atomic) –¥–ª—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ
                if [ -s "$TEMP_COVERAGE" ]; then
                  tail -n +2 "$file" >> "$TEMP_COVERAGE"
                else
                  cat "$file" >> "$TEMP_COVERAGE"
                fi
              fi
            done
            
            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ –∏—Ç–æ–≥–æ–≤—ã–π
            mv "$TEMP_COVERAGE" coverage.out
            
            # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã, —Å–æ—Ö—Ä–∞–Ω—è—è –∑–∞–≥–æ–ª–æ–≤–æ–∫
            if [ -s coverage.out ]; then
              echo "üßπ –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤..."
              (head -1 coverage.out; tail -n +2 coverage.out | sort -u) > coverage_clean.out
              mv coverage_clean.out coverage.out
            fi
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç—ã
            if [ -s coverage.out ] && [ $(wc -l < coverage.out) -gt 1 ]; then
              echo "üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞..."
              if go tool cover -func=coverage.out > cover.out 2>&1; then
                echo "‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω"
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ
                echo "üìà –ò—Ç–æ–≥–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏:"
                tail -1 cover.out
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –æ—Ç—á–µ—Ç
                echo "üåê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –æ—Ç—á–µ—Ç–∞..."
                if gocov convert coverage.out | gocov-html > .github_pages/index.html 2>&1; then
                  echo "‚úÖ HTML –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω"
                  
                  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∫ HTML –æ—Ç—á–µ—Ç—É –ø–æ–∫—Ä—ã—Ç–∏—è
                  sed -i '/<\/head>/i\
                  <style>\
                  .navigation {\
                    position: fixed;\
                    top: 10px;\
                    right: 10px;\
                    background: white;\
                    padding: 10px;\
                    border: 1px solid #ccc;\
                    border-radius: 5px;\
                    box-shadow: 0 2px 5px rgba(0,0,0,0.2);\
                    z-index: 1000;\
                  }\
                  .nav-link {\
                    display: inline-block;\
                    margin: 0 5px;\
                    padding: 5px 10px;\
                    background: #f6f8fa;\
                    color: #24292f;\
                    text-decoration: none;\
                    border-radius: 3px;\
                    border: 1px solid #d1d9e0;\
                    font-size: 12px;\
                  }\
                  .nav-link:hover {\
                    background: #e1e4e8;\
                  }\
                  </style>' .github_pages/index.html
                  
                  sed -i '/<body>/a\
                  <div class="navigation">\
                    <a href="./" class="nav-link">üìä Coverage</a>\
                    <a href="./tests/" class="nav-link">üß™ Tests</a>\
                    <a href="./lint/" class="nav-link">üîç Lint</a>\
                    <a href="./reports.html" class="nav-link">üìã All Reports</a>\
                  </div>' .github_pages/index.html
                else
                  echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è HTML –æ—Ç—á–µ—Ç–∞"
                  echo "<html><body><h1>Failed to generate coverage report</h1><p>Check logs for details</p></body></html>" > .github_pages/index.html
                fi
              else
                echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞"
                cat cover.out
                echo "total:                  (statements)   0.0%" > cover.out
                echo "<html><body><h1>Failed to generate coverage report</h1><p>Error generating function report</p></body></html>" > .github_pages/index.html
              fi
            else
              echo "‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–∫—Ä—ã—Ç–∏—è"
              echo "total:                  (statements)   0.0%" > cover.out
              echo "<html><body><h1>No coverage data available</h1><p>No tests found or no coverage generated</p></body></html>" > .github_pages/index.html
            fi
            
            # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
            for file in "${coverage_files[@]}"; do
              [ -f "$file" ] && rm -f "$file"
            done
          else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å –ø–æ–∫—Ä—ã—Ç–∏–µ –Ω–∏ –¥–ª—è –æ–¥–Ω–æ–≥–æ –º–æ–¥—É–ª—è"
            echo "total:                  (statements)   0.0%" > cover.out
            echo "<html><body><h1>No coverage files</h1><p>No coverage files were generated</p></body></html>" > .github_pages/index.html
          fi
          
          # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
          echo "üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
          echo "coverage.out —Ä–∞–∑–º–µ—Ä: $(ls -la coverage.out 2>/dev/null || echo '–Ω–µ –Ω–∞–π–¥–µ–Ω')"
          echo "cover.out —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:"
          cat cover.out 2>/dev/null || echo "cover.out –Ω–µ –Ω–∞–π–¥–µ–Ω"

      - name: üîó Create main reports index
        run: |
          # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –º–µ–∂–¥—É –æ—Ç—á–µ—Ç–∞–º–∏
          cat > .github_pages/reports.html << 'EOF'
          <!DOCTYPE html>
          <html lang="ru">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>üìä Reports Dashboard</title>
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif;
                      line-height: 1.6;
                      color: #24292f;
                      max-width: 1200px;
                      margin: 0 auto;
                      padding: 20px;
                      background: #ffffff;
                  }
                  .header {
                      text-align: center;
                      padding: 20px 0;
                      border-bottom: 2px solid #e1e4e8;
                      margin-bottom: 30px;
                  }
                  .reports-grid {
                      display: grid;
                      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                      gap: 20px;
                      margin: 30px 0;
                  }
                  .report-card {
                      background: #f6f8fa;
                      border: 1px solid #d1d9e0;
                      border-radius: 8px;
                      padding: 20px;
                      text-align: center;
                      transition: box-shadow 0.2s;
                  }
                  .report-card:hover {
                      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
                  }
                  .report-link {
                      display: block;
                      color: #0969da;
                      text-decoration: none;
                      font-weight: 600;
                      font-size: 18px;
                      margin: 10px 0;
                  }
                  .report-link:hover {
                      text-decoration: underline;
                  }
                  .report-desc {
                      color: #656d76;
                      font-size: 14px;
                  }
                  .info {
                      background: #f0f9ff;
                      color: #0369a1;
                      padding: 12px 20px;
                      border-radius: 8px;
                      border: 1px solid #bae6fd;
                      margin: 20px 0;
                      text-align: center;
                  }
                  .status-overview {
                      display: grid;
                      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                      gap: 15px;
                      margin: 20px 0;
                  }
                  .status-item {
                      padding: 10px;
                      border-radius: 6px;
                      text-align: center;
                      font-weight: 600;
                  }
                  .status-success { background: #dcfce7; color: #15803d; }
                  .status-failure { background: #fef2f2; color: #dc2626; }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>üìä MSA Rocket Factory - Reports Dashboard</h1>
              </div>
              
              <div class="info">
                  <strong>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</strong> $(date)<br>
                  <strong>Commit:</strong> ${{ github.sha }}<br>
                  <strong>Branch:</strong> ${{ github.ref_name }}
              </div>
              
              <div class="status-overview">
                  <div class="status-item $([[ "${{ steps.lint_step.outputs.LINT_STATUS }}" == "success" ]] && echo "status-success" || echo "status-failure")">
                      üîç Lint: ${{ steps.lint_step.outputs.LINT_STATUS }}
                  </div>
                  <div class="status-item $([[ "${{ steps.test_step.outputs.TEST_STATUS }}" == "success" ]] && echo "status-success" || echo "status-failure")">
                      üß™ Tests: ${{ steps.test_step.outputs.TEST_STATUS }}
                  </div>
                  <div class="status-item status-success">
                      üìä Coverage: Generated
                  </div>
              </div>
              
              <div class="reports-grid">
                  <div class="report-card">
                      <h2>üìä</h2>
                      <a href="./" class="report-link">Coverage Report</a>
                      <p class="report-desc">–û—Ç—á–µ—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –∫–æ–¥–∞ —Ç–µ—Å—Ç–∞–º–∏ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ —Ñ–∞–π–ª–∞–º –∏ —Ñ—É–Ω–∫—Ü–∏—è–º</p>
                  </div>
                  
                  <div class="report-card">
                      <h2>üß™</h2>
                      <a href="./tests/" class="report-link">Test Report</a>
                      <p class="report-desc">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è unit —Ç–µ—Å—Ç–æ–≤ –ø–æ –≤—Å–µ–º –º–æ–¥—É–ª—è–º –ø—Ä–æ–µ–∫—Ç–∞</p>
                  </div>
                  
                  <div class="report-card">
                      <h2>üîç</h2> 
                      <a href="./lint/" class="report-link">Lint Report</a>
                      <p class="report-desc">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–¥–∞ —Å –ø–æ–º–æ—â—å—é golangci-lint</p>
                  </div>
              </div>
              
              <div style="text-align: center; margin-top: 40px; color: #656d76;">
                  <p>üöÄ Generated by MSA Rocket Factory CI/CD Pipeline</p>
              </div>
          </body>
          </html>
          EOF

      # Update coverage badge
      - name: Update coverage Badge
        if: github.ref == 'refs/heads/main'
        uses: tj-actions/coverage-badge-go@v2
        with:
          filename: cover.out
          green: 80
          yellow: 40
          target: README.md

      - name: Verify Changed files
        if: github.ref == 'refs/heads/main'
        uses: tj-actions/verify-changed-files@v12
        id: verify-changed-files
        with:
          files: README.md

      - name: Commit changes
        if: github.ref == 'refs/heads/main' && steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "chore: Updated coverage badge."

      - name: Push changes
        if: github.ref == 'refs/heads/main' && steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git push origin HEAD:${{ github.ref_name }}

      # Pages setup and deployment
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          enablement: true

      - name: Upload Artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: .github_pages/

      - name: Upload Combined Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: combined-reports
          path: |
            .github_pages/
            coverage.out
            cover.out
            lint_output.txt
            test_output.txt
          retention-days: 30

      # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å CI
      - name: üîç Check CI Status
        run: |
          echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ CI..."
          
          LINT_STATUS="${{ steps.lint_step.outputs.LINT_STATUS }}"
          TEST_STATUS="${{ steps.test_step.outputs.TEST_STATUS }}"
          
          echo "üîç –°—Ç–∞—Ç—É—Å –ª–∏–Ω—Ç–∏–Ω–≥–∞: $LINT_STATUS"
          echo "üß™ –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤: $TEST_STATUS" 
          
          # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å
          if [[ "$LINT_STATUS" == "failure" ]] || [[ "$TEST_STATUS" == "failure" ]]; then
            echo "‚ùå CI –ø—Ä–æ–≤–∞–ª–µ–Ω –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ –≤ –ª–∏–Ω—Ç–∏–Ω–≥–µ –∏–ª–∏ —Ç–µ—Å—Ç–∞—Ö"
            echo "üìä –û—Ç—á–µ—Ç—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã"
            exit 1
          else
            echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ CI –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ"
          fi

  deploy:
    needs: combined-reports  
    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      contents: write
      pages: write
      id-token: write

    # –î–µ–ø–ª–æ–∏–º —Ç–æ–ª—å–∫–æ –¥–ª—è main –≤–µ—Ç–∫–∏, –¥–∞–∂–µ –µ—Å–ª–∏ CI –ø—Ä–æ–≤–∞–ª–µ–Ω (–æ—Ç—á–µ—Ç—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω—É–∂–Ω—ã)
    if: always() && github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy reports to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        continue-on-error: true

      - name: Check deployment status
        if: steps.deployment.outcome == 'success'
        run: |
          echo "‚úÖ Combined reports successfully deployed to GitHub Pages"
          echo "üìä Reports available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"

      - name: Deployment failed notice
        if: steps.deployment.outcome == 'failure'
        run: |
          echo "‚ö†Ô∏è GitHub Pages deployment failed"
          echo "üìã Reports are available as an artifact: combined-reports" 