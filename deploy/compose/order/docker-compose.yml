services: # Раздел, описывающий контейнеры, которые требуются для работы Order-сервиса

  order-service: # Order микросервис
    build:
      context: ../../../
      dockerfile: deploy/docker/order/Dockerfile

    container_name: order-service

    env_file:
      - .env

    volumes:
      - ../../../order/migrations:/app/migrations

    ports:
      - "${HTTP_PORT}:8080"

    depends_on:
      postgres-order:
        condition: service_healthy

    restart: unless-stopped

    networks:
      - microservices-net

  postgres-order: # Контейнер с PostgreSQL, используемый для хранения данных заказов
    image: ${POSTGRES_IMAGE_NAME}

    container_name: postgres-order

    env_file:
      - .env

    volumes:
      - postgres_order_data:/var/lib/postgresql/data

    ports:
      - "${EXTERNAL_POSTGRES_PORT}:5432"

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}" ]
      interval: 10s
      timeout: 5s
      retries: 5

    restart: unless-stopped

    networks:
      - microservices-net

volumes:
  postgres_order_data:

networks:
  microservices-net:
    external: true
