// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	model "github.com/kont1n/MSA_Rocket_Factory/notification/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// OrderPaidDecoder is an autogenerated mock type for the OrderPaidDecoder type
type OrderPaidDecoder struct {
	mock.Mock
}

// Decode provides a mock function with given fields: data
func (_m *OrderPaidDecoder) Decode(data []byte) (*model.OrderPaidEvent, error) {
	ret := _m.Called(data)

	if len(ret) == 0 {
		panic("no return value specified for Decode")
	}

	var r0 *model.OrderPaidEvent
	var r1 error
	if rf, ok := ret.Get(0).(func([]byte) (*model.OrderPaidEvent, error)); ok {
		return rf(data)
	}
	if rf, ok := ret.Get(0).(func([]byte) *model.OrderPaidEvent); ok {
		r0 = rf(data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.OrderPaidEvent)
		}
	}

	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewOrderPaidDecoder creates a new instance of OrderPaidDecoder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOrderPaidDecoder(t interface {
	mock.TestingT
	Cleanup(func())
}) *OrderPaidDecoder {
	mock := &OrderPaidDecoder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
